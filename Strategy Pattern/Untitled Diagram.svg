<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="845px" height="1812px" viewBox="-0.5 -0.5 845 1812" content="&lt;mxfile host=&quot;Electron&quot; modified=&quot;2024-02-22T17:57:01.944Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/23.1.5 Chrome/120.0.6099.109 Electron/28.1.0 Safari/537.36&quot; etag=&quot;H-6Wo6z855fDw5UmYMvR&quot; version=&quot;23.1.5&quot; type=&quot;device&quot;&gt;&#10;  &lt;diagram name=&quot;Page-1&quot; id=&quot;30En8RqX639hEYWnWaB6&quot;&gt;&#10;    &lt;mxGraphModel dx=&quot;525&quot; dy=&quot;315&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;850&quot; pageHeight=&quot;1100&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#10;      &lt;root&gt;&#10;        &lt;mxCell id=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-1&quot; value=&quot;&amp;lt;div style=&amp;quot;text-align: center;&amp;quot;&amp;gt;&amp;lt;span style=&amp;quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68); font-size: 20px; text-align: left;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 20px;&amp;quot; face=&amp;quot;Helvetica&amp;quot;&amp;gt;&amp;lt;b&amp;gt;Strategy Pattern &amp;lt;/b&amp;gt;is a behavioral design pattern that lets you define a family of algorithms, put each of them into a separate class, and make their objects&amp;amp;nbsp;interchangeable.&amp;lt;/font&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;align=center;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;103&quot; y=&quot;30&quot; width=&quot;645&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-2&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;what&amp;#39;s the problem strategy pattern is trying to solve?&amp;lt;br&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;div style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;well, it&amp;#39;s trying to use composition instead of inheritence, and why is that?&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;so that it adds more flexibility and solve duplication code problems&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;b&amp;gt;but how is that? what&amp;#39;s wrong with inheritance?&amp;lt;/b&amp;gt;&amp;amp;nbsp;&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;let&amp;#39;s say we are trying to create a data structure similar to an array but it can sort it&amp;#39;s items based on the concrete class that implements the interface&amp;lt;/font&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;10&quot; y=&quot;120&quot; width=&quot;830&quot; height=&quot;100&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-4&quot; value=&quot;&amp;lt;i&amp;gt;IDataStructure&amp;lt;/i&amp;gt;&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;250&quot; y=&quot;250&quot; width=&quot;200&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-5&quot; value=&quot;list&amp;amp;lt;int&amp;amp;gt; numbers&amp;lt;br&amp;gt;Sort()&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-4&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;30&quot; width=&quot;190&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-10&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;DvV9VX9w6WSMI42IzWNc-6&quot; target=&quot;DvV9VX9w6WSMI42IzWNc-4&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-6&quot; value=&quot;HugeDataStructure&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;390&quot; y=&quot;360&quot; width=&quot;200&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-7&quot; value=&quot;Sort() // using mergeSort&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-6&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;30&quot; width=&quot;190&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-11&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=block;endFill=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;DvV9VX9w6WSMI42IzWNc-8&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;320&quot; y=&quot;320&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;203&quot; y=&quot;340&quot; /&gt;&#10;              &lt;mxPoint x=&quot;320&quot; y=&quot;340&quot; /&gt;&#10;              &lt;mxPoint x=&quot;320&quot; y=&quot;320&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-8&quot; value=&quot;SmallDataStructure&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;103&quot; y=&quot;360&quot; width=&quot;200&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-9&quot; value=&quot;Sort() // using bubble sort&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-8&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;30&quot; width=&quot;190&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-12&quot; value=&quot;&amp;lt;span style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;u gonna say what&amp;#39;s wrong with that?&amp;lt;br&amp;gt;there is nothing wrong with that ofc but what if u did that and your boss wanted u to add another concrete class&amp;amp;nbsp;&amp;lt;br&amp;gt;that use mergeSort as a sorting algorithm?&amp;amp;nbsp;&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;10.5&quot; y=&quot;440&quot; width=&quot;830&quot; height=&quot;100&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-13&quot; value=&quot;&amp;lt;i&amp;gt;IDataStructure&amp;lt;/i&amp;gt;&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;328&quot; y=&quot;540&quot; width=&quot;200&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-14&quot; value=&quot;list&amp;amp;lt;int&amp;amp;gt; numbers&amp;lt;br&amp;gt;Sort()&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-13&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;30&quot; width=&quot;190&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-15&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=block;endFill=0;&quot; edge=&quot;1&quot; source=&quot;DvV9VX9w6WSMI42IzWNc-16&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;500&quot; y=&quot;610&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;720&quot; y=&quot;630&quot; /&gt;&#10;              &lt;mxPoint x=&quot;500&quot; y=&quot;630&quot; /&gt;&#10;              &lt;mxPoint x=&quot;500&quot; y=&quot;610&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-16&quot; value=&quot;HugeDataStructure&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;620&quot; y=&quot;650&quot; width=&quot;200&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-17&quot; value=&quot;Sort() // using mergeSort&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-16&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;30&quot; width=&quot;190&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-22&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=block;endFill=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;DvV9VX9w6WSMI42IzWNc-19&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;420&quot; y=&quot;610&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-19&quot; value=&quot;SmallDataStructure&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;320&quot; y=&quot;650&quot; width=&quot;200&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-20&quot; value=&quot;Sort() // using bubble sort&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-19&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;30&quot; width=&quot;190&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-25&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.25;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;DvV9VX9w6WSMI42IzWNc-23&quot; target=&quot;DvV9VX9w6WSMI42IzWNc-13&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;150&quot; y=&quot;630&quot; /&gt;&#10;              &lt;mxPoint x=&quot;378&quot; y=&quot;630&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-23&quot; value=&quot;BossNewDataStructure&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;50&quot; y=&quot;650&quot; width=&quot;200&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-24&quot; value=&quot;Sort() // using merge sort&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-23&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;30&quot; width=&quot;190&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-26&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;here comes the problem, &amp;lt;b&amp;gt;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot; color=&amp;quot;#ff6666&amp;quot;&amp;gt;there is a code duplication!! that&amp;#39;s the first problem&amp;lt;br&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;/b&amp;gt;let&amp;#39;s go to the second problem, let&amp;#39;s say there is another datastructure that can implement &amp;lt;i&amp;gt;&amp;lt;b&amp;gt;IDataStructure &amp;lt;/b&amp;gt;&amp;lt;/i&amp;gt;but it doesn&amp;#39;t need sorting at all, let&amp;#39;s call it &amp;lt;b&amp;gt;DefaultDataStructure&amp;lt;/b&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;if u implemented in it sort method and let&amp;#39;s say u didn&amp;#39;t do anything in it&amp;amp;nbsp;&amp;lt;br&amp;gt;that&amp;#39;s bad, why?&amp;lt;br&amp;gt;cuz you&amp;#39;re contradicting with the interface segregation principle&amp;lt;br&amp;gt;so what&amp;#39;s the solution?&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;- what about using composition?&amp;amp;nbsp;&amp;lt;br&amp;gt;+ what do u mean?&amp;lt;br&amp;gt;- well, if we instead of inheriting sort() from &amp;lt;i style=&amp;quot;font-weight: bold;&amp;quot;&amp;gt;IDataStructure,&amp;amp;nbsp;&amp;lt;/i&amp;gt;let&amp;#39;s just use composition and pass the algorithm of sorting to the data strucute that wants to sort it&amp;#39;s data using any algorithm it wants, and we will pass it using dependency injection&amp;lt;br&amp;gt;now, we don&amp;#39;t have to care about the logic for sorting and code duplication&amp;amp;nbsp;&amp;lt;br&amp;gt;it even can give us so much flexibility that we can get rid of all the concrete classed that inherit from the main Interface (&amp;lt;b&amp;gt;&amp;lt;i&amp;gt;IDataStructure&amp;lt;/i&amp;gt;&amp;lt;/b&amp;gt;) and convert the main interface to a normal class&amp;lt;br&amp;gt;but not in this example, let&amp;#39;s see the following example:&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;760&quot; width=&quot;830&quot; height=&quot;330&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-27&quot; value=&quot;&amp;lt;i&amp;gt;IDuck&amp;lt;/i&amp;gt;&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;315&quot; y=&quot;1100&quot; width=&quot;200&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-28&quot; value=&quot;Quack()&amp;lt;br&amp;gt;Fly()&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-27&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;30&quot; width=&quot;190&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-33&quot; value=&quot;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;&amp;lt;font style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;what if Quack() and Fly() are the same as the sort method of the previous example?&amp;lt;br&amp;gt;so what if we create another interface &amp;lt;i style=&amp;quot;font-weight: bold;&amp;quot;&amp;gt;IQuackBeheaviour &amp;lt;/i&amp;gt;and &amp;lt;b style=&amp;quot;&amp;quot;&amp;gt;&amp;lt;i&amp;gt;IFlyBeheaviour&amp;lt;br&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/font&amp;gt;that have different algorithms for Fly and Quack, now we can just inject &amp;lt;b style=&amp;quot;font-style: italic;&amp;quot;&amp;gt;IQuackBeheaviour &amp;lt;/b&amp;gt;and &amp;lt;b style=&amp;quot;font-style: italic;&amp;quot;&amp;gt;IFlyBeheaviour&amp;lt;br&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/font&amp;gt;&amp;lt;span style=&amp;quot;font-size: 16px;&amp;quot;&amp;gt;and we can remove the concrete classes(&amp;lt;b&amp;gt;American/Egyptian Duck&amp;lt;/b&amp;gt;) and convert the main interface (&amp;lt;b&amp;gt;&amp;lt;i&amp;gt;IDuck&amp;lt;/i&amp;gt;&amp;lt;/b&amp;gt;) to a normal class &amp;lt;b&amp;gt;Duck &amp;lt;/b&amp;gt;that take different beheaviours by injection and based on that we can create any duck we want&amp;lt;br&amp;gt;&amp;lt;/span&amp;gt;&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;20&quot; y=&quot;1320&quot; width=&quot;830&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-40&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=block;endFill=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;DvV9VX9w6WSMI42IzWNc-34&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;441&quot; y=&quot;1170&quot; as=&quot;targetPoint&quot; /&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;580&quot; y=&quot;1200&quot; /&gt;&#10;              &lt;mxPoint x=&quot;441&quot; y=&quot;1200&quot; /&gt;&#10;              &lt;mxPoint x=&quot;441&quot; y=&quot;1170&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-34&quot; value=&quot;EgyptianDuck&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;480&quot; y=&quot;1240&quot; width=&quot;200&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-35&quot; value=&quot;Quack()&amp;lt;br&amp;gt;Fly()&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-34&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;30&quot; width=&quot;190&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-38&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;endArrow=block;endFill=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;DvV9VX9w6WSMI42IzWNc-36&quot; target=&quot;DvV9VX9w6WSMI42IzWNc-27&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;Array as=&quot;points&quot;&gt;&#10;              &lt;mxPoint x=&quot;260&quot; y=&quot;1200&quot; /&gt;&#10;              &lt;mxPoint x=&quot;415&quot; y=&quot;1200&quot; /&gt;&#10;            &lt;/Array&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-36&quot; value=&quot;AmericanDuck&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;160&quot; y=&quot;1240&quot; width=&quot;200&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-37&quot; value=&quot;Quack()&amp;lt;br&amp;gt;Fly()&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-36&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;30&quot; width=&quot;190&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-63&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=open;endFill=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;DvV9VX9w6WSMI42IzWNc-41&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;220&quot; y=&quot;1519.9999999999998&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-41&quot; value=&quot;Duck&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;303&quot; y=&quot;1480&quot; width=&quot;240&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-42&quot; value=&quot;IQuackBeheaviour quackBeheaviour;&amp;lt;br&amp;gt;IFlyBeheaviour flyBeheaviour;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;Duck(IQuackBeheaviour&amp;amp;nbsp;,IFlyBeheaviour&amp;amp;nbsp;)&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-41&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;40&quot; width=&quot;235&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-45&quot; value=&quot;&amp;lt;i&amp;gt;IQuackBeheaviour&amp;lt;/i&amp;gt;&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;635&quot; y=&quot;1480&quot; width=&quot;200&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-46&quot; value=&quot;Quack()&amp;lt;div&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-45&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;30&quot; width=&quot;190&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-51&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=block;endFill=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;DvV9VX9w6WSMI42IzWNc-47&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;720&quot; y=&quot;1549.9999999999998&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-47&quot; value=&quot;SimpleQuack&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;620&quot; y=&quot;1615&quot; width=&quot;100&quot; height=&quot;55&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-48&quot; value=&quot;Quack()&amp;lt;div&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-47&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;30&quot; width=&quot;55&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-52&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=block;endFill=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;DvV9VX9w6WSMI42IzWNc-49&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;740&quot; y=&quot;1549.9999999999998&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-49&quot; value=&quot;QuitQuack&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;740.5&quot; y=&quot;1615&quot; width=&quot;100&quot; height=&quot;55&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-50&quot; value=&quot;Quack()&amp;lt;div&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-49&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;30&quot; width=&quot;55&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-53&quot; value=&quot;&amp;lt;i&amp;gt;IFlyBeheaviour&amp;lt;/i&amp;gt;&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;20&quot; y=&quot;1480&quot; width=&quot;200&quot; height=&quot;70&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-54&quot; value=&quot;Fly()&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-53&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;30&quot; width=&quot;190&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-62&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=block;endFill=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;DvV9VX9w6WSMI42IzWNc-55&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;110&quot; y=&quot;1549.9999999999998&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-55&quot; value=&quot;HighQuack&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;20&quot; y=&quot;1595&quot; width=&quot;100&quot; height=&quot;55&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-60&quot; value=&quot;Fly()&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-55&quot;&gt;&#10;          &lt;mxGeometry x=&quot;5&quot; y=&quot;30&quot; width=&quot;55&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-61&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=block;endFill=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;DvV9VX9w6WSMI42IzWNc-57&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;140&quot; y=&quot;1549.9999999999998&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-57&quot; value=&quot;LowFly&quot; style=&quot;swimlane;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;140&quot; y=&quot;1595&quot; width=&quot;100&quot; height=&quot;55&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-58&quot; value=&quot;Fly()&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;DvV9VX9w6WSMI42IzWNc-57&quot;&gt;&#10;          &lt;mxGeometry x=&quot;10&quot; y=&quot;30&quot; width=&quot;55&quot; height=&quot;20&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-67&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;endArrow=open;endFill=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;DvV9VX9w6WSMI42IzWNc-42&quot; target=&quot;DvV9VX9w6WSMI42IzWNc-45&quot;&gt;&#10;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-68&quot; value=&quot;&amp;lt;div style=&amp;quot;text-align: center;&amp;quot;&amp;gt;&amp;lt;b style=&amp;quot;font-size: 30px; background-color: initial;&amp;quot;&amp;gt;That&amp;#39;s the power of &amp;lt;font color=&amp;quot;#ff6666&amp;quot;&amp;gt;Strategy Pattern&amp;lt;/font&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;span style=&amp;quot;font-size: 30px;&amp;quot;&amp;gt;&amp;lt;div style=&amp;quot;text-align: center;&amp;quot;&amp;gt;&amp;lt;b style=&amp;quot;background-color: initial;&amp;quot;&amp;gt;That&amp;#39;s the power of &amp;lt;font color=&amp;quot;#ff6666&amp;quot;&amp;gt;Composition&amp;lt;/font&amp;gt;&amp;lt;/b&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/span&amp;gt;&quot; style=&quot;text;strokeColor=none;align=left;fillColor=none;html=1;verticalAlign=middle;whiteSpace=wrap;rounded=0;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry x=&quot;165&quot; y=&quot;1700&quot; width=&quot;520&quot; height=&quot;120&quot; as=&quot;geometry&quot; /&gt;&#10;        &lt;/mxCell&gt;&#10;        &lt;mxCell id=&quot;DvV9VX9w6WSMI42IzWNc-69&quot; value=&quot;&quot; style=&quot;endArrow=none;html=1;rounded=0;&quot; edge=&quot;1&quot; parent=&quot;1&quot;&gt;&#10;          &lt;mxGeometry width=&quot;50&quot; height=&quot;50&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#10;            &lt;mxPoint x=&quot;305&quot; y=&quot;1820&quot; as=&quot;sourcePoint&quot; /&gt;&#10;            &lt;mxPoint x=&quot;525&quot; y=&quot;1820&quot; as=&quot;targetPoint&quot; /&gt;&#10;          &lt;/mxGeometry&gt;&#10;        &lt;/mxCell&gt;&#10;      &lt;/root&gt;&#10;    &lt;/mxGraphModel&gt;&#10;  &lt;/diagram&gt;&#10;&lt;/mxfile&gt;&#10;"><defs/><g><rect x="98" y="21" width="645" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 643px; height: 1px; padding-top: 36px; margin-left: 99px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="text-align: center;"><span style="background-color: rgb(255, 255, 255); color: rgb(68, 68, 68); font-size: 20px; text-align: left;"><font face="Helvetica" style="font-size: 20px;"><b>Strategy Pattern </b>is a behavioral design pattern that lets you define a family of algorithms, put each of them into a separate class, and make their objects interchangeable.</font></span></div></div></div></div></foreignObject><text x="421" y="40" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">Strategy Pattern is a behavioral design pattern that lets you define a family of algorithms, put each of th...</text></switch></g><rect x="5" y="111" width="830" height="100" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 828px; height: 1px; padding-top: 161px; margin-left: 7px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><font style="font-size: 16px;">what's the problem strategy pattern is trying to solve?<br /></font><div style="font-size: 16px;"><font style="font-size: 16px;">well, it's trying to use composition instead of inheritence, and why is that? </font></div><div style="font-size: 16px;"><font style="font-size: 16px;">so that it adds more flexibility and solve duplication code problems</font></div><div style="font-size: 16px;"><font style="font-size: 16px;"><b>but how is that? what's wrong with inheritance?</b> </font></div><div style="font-size: 16px;"><font style="font-size: 16px;">let's say we are trying to create a data structure similar to an array but it can sort it's items based on the concrete class that implements the interface</font></div></div></div></div></foreignObject><text x="7" y="165" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">what's the problem strategy pattern is trying to solve?...</text></switch></g><path d="M 245 264 L 245 241 L 445 241 L 445 264" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 245 264 L 245 311 L 445 311 L 445 264" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 245 264 L 445 264" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 253px; margin-left: 246px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;"><i>IDataStructure</i></div></div></div></foreignObject><text x="345" y="256" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">IDataStructure</text></switch></g><rect x="250" y="271" width="190" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 188px; height: 1px; padding-top: 286px; margin-left: 252px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">list&lt;int&gt; numbers<br />Sort()</div></div></div></foreignObject><text x="252" y="290" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">list&lt;int&gt; numbers...</text></switch></g><path d="M 485 351 L 485 331 L 345 331 L 345 319.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 345 312.12 L 348.5 319.12 L 341.5 319.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 385 374 L 385 351 L 585 351 L 585 374" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 385 374 L 385 421 L 585 421 L 585 374" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 385 374 L 585 374" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 363px; margin-left: 386px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">HugeDataStructure</div></div></div></foreignObject><text x="485" y="366" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">HugeDataStructure</text></switch></g><rect x="390" y="381" width="190" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 188px; height: 1px; padding-top: 396px; margin-left: 392px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Sort() // using mergeSort</div></div></div></foreignObject><text x="392" y="400" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Sort() // using mergeSort</text></switch></g><path d="M 198 351 L 198 331 L 315 331 L 315 319.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 315 312.12 L 318.5 319.12 L 311.5 319.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 98 374 L 98 351 L 298 351 L 298 374" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 98 374 L 98 421 L 298 421 L 298 374" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 98 374 L 298 374" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 363px; margin-left: 99px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">SmallDataStructure</div></div></div></foreignObject><text x="198" y="366" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">SmallDataStructure</text></switch></g><rect x="103" y="381" width="190" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 188px; height: 1px; padding-top: 396px; margin-left: 105px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Sort() // using bubble sort</div></div></div></foreignObject><text x="105" y="400" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Sort() // using bubble sort</text></switch></g><rect x="5.5" y="431" width="830" height="100" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 828px; height: 1px; padding-top: 481px; margin-left: 8px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><span style="font-size: 16px;">u gonna say what's wrong with that?<br />there is nothing wrong with that ofc but what if u did that and your boss wanted u to add another concrete class <br />that use mergeSort as a sorting algorithm? <br /></span></div></div></div></foreignObject><text x="8" y="485" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">u gonna say what's wrong with that?...</text></switch></g><path d="M 323 554 L 323 531 L 523 531 L 523 554" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 323 554 L 323 601 L 523 601 L 523 554" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 323 554 L 523 554" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 543px; margin-left: 324px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;"><i>IDataStructure</i></div></div></div></foreignObject><text x="423" y="546" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">IDataStructure</text></switch></g><rect x="328" y="561" width="190" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 188px; height: 1px; padding-top: 576px; margin-left: 330px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">list&lt;int&gt; numbers<br />Sort()</div></div></div></foreignObject><text x="330" y="580" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">list&lt;int&gt; numbers...</text></switch></g><path d="M 715 641 L 715 621 L 495 621 L 495 609.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 495 602.12 L 498.5 609.12 L 491.5 609.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 615 664 L 615 641 L 815 641 L 815 664" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 615 664 L 615 711 L 815 711 L 815 664" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 615 664 L 815 664" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 653px; margin-left: 616px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">HugeDataStructure</div></div></div></foreignObject><text x="715" y="656" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">HugeDataStructure</text></switch></g><rect x="620" y="671" width="190" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 188px; height: 1px; padding-top: 686px; margin-left: 622px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Sort() // using mergeSort</div></div></div></foreignObject><text x="622" y="690" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Sort() // using mergeSort</text></switch></g><path d="M 415 641 L 415 621 L 415 609.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 415 602.12 L 418.5 609.12 L 411.5 609.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 315 664 L 315 641 L 515 641 L 515 664" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 315 664 L 315 711 L 515 711 L 515 664" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 315 664 L 515 664" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 653px; margin-left: 316px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">SmallDataStructure</div></div></div></foreignObject><text x="415" y="656" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">SmallDataStructure</text></switch></g><rect x="320" y="671" width="190" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 188px; height: 1px; padding-top: 686px; margin-left: 322px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Sort() // using bubble sort</div></div></div></foreignObject><text x="322" y="690" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Sort() // using bubble sort</text></switch></g><path d="M 145 641 L 145 621 L 373 621 L 373 609.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 373 602.12 L 376.5 609.12 L 369.5 609.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 45 664 L 45 641 L 245 641 L 245 664" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 45 664 L 45 711 L 245 711 L 245 664" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 45 664 L 245 664" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 653px; margin-left: 46px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">BossNewDataStructure</div></div></div></foreignObject><text x="145" y="656" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">BossNewDataStructure</text></switch></g><rect x="50" y="671" width="190" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 188px; height: 1px; padding-top: 686px; margin-left: 52px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Sort() // using merge sort</div></div></div></foreignObject><text x="52" y="690" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Sort() // using merge sort</text></switch></g><rect x="0" y="751" width="830" height="330" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 828px; height: 1px; padding-top: 916px; margin-left: 2px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><font style="font-size: 16px;">here comes the problem, <b><font color="#ff6666" style="font-size: 16px;">there is a code duplication!! that's the first problem<br /></font></b>let's go to the second problem, let's say there is another datastructure that can implement <i><b>IDataStructure </b></i>but it doesn't need sorting at all, let's call it <b>DefaultDataStructure</b><br /></font><span style="font-size: 16px;">if u implemented in it sort method and let's say u didn't do anything in it <br />that's bad, why?<br />cuz you're contradicting with the interface segregation principle<br />so what's the solution?<br /><br />- what about using composition? <br />+ what do u mean?<br />- well, if we instead of inheriting sort() from <i style="font-weight: bold;">IDataStructure, </i>let's just use composition and pass the algorithm of sorting to the data strucute that wants to sort it's data using any algorithm it wants, and we will pass it using dependency injection<br />now, we don't have to care about the logic for sorting and code duplication <br />it even can give us so much flexibility that we can get rid of all the concrete classed that inherit from the main Interface (<b><i>IDataStructure</i></b>) and convert the main interface to a normal class<br />but not in this example, let's see the following example:<br /><br /></span></div></div></div></foreignObject><text x="2" y="920" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">here comes the problem, there is a code duplication!! that's the first problem...</text></switch></g><path d="M 310 1114 L 310 1091 L 510 1091 L 510 1114" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 310 1114 L 310 1161 L 510 1161 L 510 1114" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 310 1114 L 510 1114" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 1103px; margin-left: 311px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;"><i>IDuck</i></div></div></div></foreignObject><text x="410" y="1106" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">IDuck</text></switch></g><rect x="315" y="1121" width="190" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 188px; height: 1px; padding-top: 1136px; margin-left: 317px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Quack()<br />Fly()</div></div></div></foreignObject><text x="317" y="1140" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Quack()...</text></switch></g><rect x="15" y="1311" width="830" height="120" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 828px; height: 1px; padding-top: 1371px; margin-left: 17px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><font style="font-size: 16px;"><font style="font-size: 16px;">what if Quack() and Fly() are the same as the sort method of the previous example?<br />so what if we create another interface <i style="font-weight: bold;">IQuackBeheaviour </i>and <b style=""><i>IFlyBeheaviour<br /></i></b></font>that have different algorithms for Fly and Quack, now we can just inject <b style="font-style: italic;">IQuackBeheaviour </b>and <b style="font-style: italic;">IFlyBeheaviour<br /></b></font><span style="font-size: 16px;">and we can remove the concrete classes(<b>American/Egyptian Duck</b>) and convert the main interface (<b><i>IDuck</i></b>) to a normal class <b>Duck </b>that take different beheaviours by injection and based on that we can create any duck we want<br /></span></div></div></div></foreignObject><text x="17" y="1375" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">what if Quack() and Fly() are the same as the sort method of the previous example?...</text></switch></g><path d="M 575 1231 L 575 1191 L 436 1191 L 436 1169.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 436 1162.12 L 439.5 1169.12 L 432.5 1169.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 475 1254 L 475 1231 L 675 1231 L 675 1254" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 475 1254 L 475 1301 L 675 1301 L 675 1254" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 475 1254 L 675 1254" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 1243px; margin-left: 476px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">EgyptianDuck</div></div></div></foreignObject><text x="575" y="1246" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">EgyptianDuck</text></switch></g><rect x="480" y="1261" width="190" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 188px; height: 1px; padding-top: 1276px; margin-left: 482px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Quack()<br />Fly()</div></div></div></foreignObject><text x="482" y="1280" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Quack()...</text></switch></g><path d="M 255 1231 L 255 1191 L 410 1191 L 410 1169.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 410 1162.12 L 413.5 1169.12 L 406.5 1169.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 155 1254 L 155 1231 L 355 1231 L 355 1254" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 155 1254 L 155 1301 L 355 1301 L 355 1254" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 155 1254 L 355 1254" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 1243px; margin-left: 156px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">AmericanDuck</div></div></div></foreignObject><text x="255" y="1246" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">AmericanDuck</text></switch></g><rect x="160" y="1261" width="190" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 188px; height: 1px; padding-top: 1276px; margin-left: 162px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Quack()<br />Fly()</div></div></div></foreignObject><text x="162" y="1280" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Quack()...</text></switch></g><path d="M 298 1531 L 257 1531 L 257 1511.5 L 217.24 1511.03" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 223.16 1507.6 L 216.12 1511.01 L 223.08 1514.6" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 298 1494 L 298 1471 L 538 1471 L 538 1494" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 298 1494 L 298 1591 L 538 1591 L 538 1494" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 298 1494 L 538 1494" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 238px; height: 1px; padding-top: 1483px; margin-left: 299px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">Duck</div></div></div></foreignObject><text x="418" y="1486" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">Duck</text></switch></g><rect x="303" y="1511" width="235" height="60" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 233px; height: 1px; padding-top: 1541px; margin-left: 305px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">IQuackBeheaviour quackBeheaviour;<br />IFlyBeheaviour flyBeheaviour;<br /><br />Duck(IQuackBeheaviour ,IFlyBeheaviour )</div></div></div></foreignObject><text x="305" y="1545" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">IQuackBeheaviour quackBeheaviour;...</text></switch></g><path d="M 630 1494 L 630 1471 L 830 1471 L 830 1494" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 630 1494 L 630 1541 L 830 1541 L 830 1494" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 630 1494 L 830 1494" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 1483px; margin-left: 631px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;"><i>IQuackBeheaviour</i></div></div></div></foreignObject><text x="730" y="1486" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">IQuackBeheaviour</text></switch></g><rect x="635" y="1501" width="190" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 188px; height: 1px; padding-top: 1516px; margin-left: 637px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Quack()<div><br /></div></div></div></div></foreignObject><text x="637" y="1520" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Quack()&#xa;</text></switch></g><path d="M 665 1606 L 665 1574 L 715.5 1574 L 715.12 1549.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 715.02 1542.12 L 718.62 1549.06 L 711.62 1549.17 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 615 1629 L 615 1606 L 715 1606 L 715 1629" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 615 1629 L 615 1661 L 715 1661 L 715 1629" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 615 1629 L 715 1629" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 98px; height: 1px; padding-top: 1618px; margin-left: 616px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">SimpleQuack</div></div></div></foreignObject><text x="665" y="1621" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">SimpleQuack</text></switch></g><rect x="620" y="1636" width="55" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 53px; height: 1px; padding-top: 1651px; margin-left: 622px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Quack()<div><br /></div></div></div></div></foreignObject><text x="622" y="1655" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Quack()&#xa;</text></switch></g><path d="M 785.5 1606 L 785.5 1574 L 735.5 1574 L 735.12 1549.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 735.02 1542.12 L 738.62 1549.06 L 731.62 1549.17 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 735.5 1629 L 735.5 1606 L 835.5 1606 L 835.5 1629" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 735.5 1629 L 735.5 1661 L 835.5 1661 L 835.5 1629" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 735.5 1629 L 835.5 1629" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 98px; height: 1px; padding-top: 1618px; margin-left: 737px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">QuitQuack</div></div></div></foreignObject><text x="786" y="1621" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">QuitQuack</text></switch></g><rect x="740.5" y="1636" width="55" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 53px; height: 1px; padding-top: 1651px; margin-left: 743px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Quack()<div><br /></div></div></div></div></foreignObject><text x="743" y="1655" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Quack()&#xa;</text></switch></g><path d="M 15 1494 L 15 1471 L 215 1471 L 215 1494" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 15 1494 L 15 1541 L 215 1541 L 215 1494" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 15 1494 L 215 1494" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 1483px; margin-left: 16px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;"><i>IFlyBeheaviour</i></div></div></div></foreignObject><text x="115" y="1486" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">IFlyBeheaviour</text></switch></g><rect x="20" y="1501" width="190" height="30" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 188px; height: 1px; padding-top: 1516px; margin-left: 22px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Fly()</div></div></div></foreignObject><text x="22" y="1520" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Fly()</text></switch></g><path d="M 65 1586 L 65 1564 L 105.5 1564 L 105.18 1549.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 105.02 1542.12 L 108.68 1549.04 L 101.68 1549.19 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 15 1609 L 15 1586 L 115 1586 L 115 1609" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 15 1609 L 15 1641 L 115 1641 L 115 1609" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 15 1609 L 115 1609" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 98px; height: 1px; padding-top: 1598px; margin-left: 16px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">HighQuack</div></div></div></foreignObject><text x="65" y="1601" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">HighQuack</text></switch></g><rect x="20" y="1616" width="55" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 53px; height: 1px; padding-top: 1626px; margin-left: 22px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Fly()</div></div></div></foreignObject><text x="22" y="1630" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Fly()</text></switch></g><path d="M 185 1586 L 185 1564 L 135.5 1564 L 135.18 1549.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 135.02 1542.12 L 138.68 1549.04 L 131.68 1549.19 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 135 1609 L 135 1586 L 235 1586 L 235 1609" fill="rgb(255, 255, 255)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 135 1609 L 135 1641 L 235 1641 L 235 1609" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><path d="M 135 1609 L 235 1609" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 98px; height: 1px; padding-top: 1598px; margin-left: 136px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; overflow-wrap: normal;">LowFly</div></div></div></foreignObject><text x="185" y="1601" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle" font-weight="bold">LowFly</text></switch></g><rect x="145" y="1616" width="55" height="20" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 53px; height: 1px; padding-top: 1626px; margin-left: 147px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;">Fly()</div></div></div></foreignObject><text x="147" y="1630" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">Fly()</text></switch></g><path d="M 538 1541 L 584 1541 L 584 1506 L 627.76 1506" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 621.88 1509.5 L 628.88 1506 L 621.88 1502.5" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="160" y="1691" width="520" height="120" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe flex-start; width: 518px; height: 1px; padding-top: 1751px; margin-left: 162px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="text-align: center;"><b style="font-size: 30px; background-color: initial;">That's the power of <font color="#ff6666">Strategy Pattern</font></b></div><span style="font-size: 30px;"><div style="text-align: center;"><b style="background-color: initial;">That's the power of <font color="#ff6666">Composition</font></b></div></span></div></div></div></foreignObject><text x="162" y="1755" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">That's the power of Strategy PatternThat's the power of Composition</text></switch></g><path d="M 300 1811 L 520 1811" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.drawio.com/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>